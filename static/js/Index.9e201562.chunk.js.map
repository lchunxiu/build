{"version":3,"sources":["utils/axios.js","component/LoginModal/action.js","component/LoginModal/index.js","common.js","component/RightBar/index.js","serviceWorker.js","pages/Index/index.js"],"names":["instance","axios","create","baseURL","timeout","method","withCredentials","responseType","responseEncoding","xsrfCookieName","xsrfHeaderName","ToastInfo","info","modal_default","a","error","title","content","okText","getCertNo","phoneNo","get","params","m","c","scene","type","mobile","then","_ref","_ref$data","data","status","catch","e","console","login","userName","verify_code","post","qs","stringify","username","headers","Content-Type","_ref2","_ref2$data","msg","obj","user","user_id","localStorage","setItem","JSON","window","location","href","getCertAtfer","LoginModal","state","visible","getCerting","certNoTime","logining","showModal","_this","setState","handleCancel","countTimer","setTimeout","getCert","props","form","validateFields","err","values","validatePhoneNo","res","test","validateCertNo","CertNo","handleSubmit","preventDefault","certNo","nodeList","document","body","querySelectorAll","len","length","i","addEventListener","this","removeEventListener","getFieldDecorator","_this$state","react_default","createElement","Fragment","centered","footer","closable","className","style","width","maskClosable","onCancel","form_default","onSubmit","Item","input_default","placeholder","prefix","icon_default","color","addonAfter","onClick","concat","button_default","htmlType","block","loading","React","Component","src_component_LoginModal","name","ReactDOM","render","getElementById","browser","Bowser","getParser","navigator","userAgent","getBrowser","Number","parseInt","version","innerHTML","log","RightBar","QRVisible","toggleQRVisible","stopPropagation","display","src","process","alt","back_top_default","id","Boolean","hostname","match","RightBar_RightBar","Swiper","loop","autoplay","delay","disableOnInteraction","navigation","nextEl","prevEl","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/Index.9e201562.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://www.erershop.com/',\n  timeout: 1000,\n  method: 'get',\n  withCredentials:true,\n   // `responseType` indicates the type of data that the server will respond with\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  //   browser only: 'blob'\n  responseType: 'json', // default\n\n  // `responseEncoding` indicates encoding to use for decoding responses\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n  // headers: {'X-Custom-Header': 'foobar'}\n});\n\n// instance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nexport default instance;","import axios from '../../utils/axios';\nimport qs from 'qs';\nimport {Modal} from 'antd';\n\nconst ToastInfo = (info)=>{\n    Modal.error({\n        title: '提示',\n        content: info,\n        okText:'确定',\n      });\n}\n\nconst getCertNo = (phoneNo) =>{\n    return axios.get('index.php', {\n        params:{\n            m: 'Home',\n            c:'Api',\n            a:'send_validate_code',\n            scene:1,\n            type:'mobile',\n            mobile:phoneNo,\n        }\n    }).then(({data={}})=>{\n        if(data.status === 1){\n            return true;\n        }else{\n            ToastInfo('今天获取验证码超过10条，明天才可以获取');\n            return false;\n        }\n    }).catch((e)=>{\n        console.error(\"index.php\",e);\n        ToastInfo('服务异常');\n        return false;\n    })\n}\n\nconst login = (userName,verify_code)=>{\n    return axios.post('index.php/Admin/Api/do_login', qs.stringify({\n        username:userName,\n        verify_code,\n      }),{\n            headers:{\n                'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8',\n            },\n      }).then(({data={}})=>{\n        if(data.status===-1){\n            ToastInfo(data.msg);\n            return false;\n        }\n\n        var obj = {\n            username : data.user.mobile,\n            user_id:data.user.user_id,\n        };\n        localStorage.setItem('ererPcuserObj',JSON.stringify(obj));\n        window.location.href = 'shopmsg.html'\n        return true;\n      }).catch(e=>{\n         console.error(\"index.php/Admin/Api/do_login\",e);\n         ToastInfo('服务异常');\n        return false;\n      });\n} \n\nexport {\n    getCertNo,\n    login,\n}\n","import React from 'react';\nimport { Modal, Button, Input, Icon, Form  } from 'antd';\nimport {getCertNo,login} from './action';\nimport './index.css';\n\nconst ToastInfo = (info)=>{\n    Modal.error({\n        title: '提示',\n        content: info,\n        okText:'确定',\n      });\n}\n\n// 60s后重新获取验证码\nconst getCertAtfer = 60;\n\nclass LoginModal extends React.Component{\n    state={\n        visible:false,\n        // 关于验证码\n        getCerting:false,\n        certNoTime:0,\n\n        // 关于登录\n        logining:false,\n\n    }\n    componentDidMount(){\n        let nodeList = document.body.querySelectorAll('[href=\"#login-modal\"]'),len = nodeList.length;\n        for(let i=0;i<len;i++){\n            nodeList[i].addEventListener('click',this.showModal,false);\n        }\n    }\n    componentWillUnmount(){\n        let nodeList = document.body.querySelectorAll('click','[href=\"#login-modal\"]'),len = nodeList.length;\n        for(let i=0;i<len;i++){\n            nodeList[i].removeEventListener(this.showModal);\n        }\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleCancel = e => {\n        this.setState({\n          visible: false,\n        });\n      };\n    countTimer = ()=>{\n        const {certNoTime} = this.state;\n        this.setState({certNoTime:certNoTime-1},()=>{\n            if(certNoTime>1){\n                setTimeout(this.countTimer,1000);\n            }\n        });\n    }\n    getCert = (e)=>{\n        this.props.form.validateFields((err, values)=>{\n            if(this.validatePhoneNo(values.phoneNo)){\n                this.setState({getCerting:true});\n                getCertNo(values.phoneNo).then((res)=>{\n                    if(res){\n                        this.setState({getCerting:false,certNoTime:getCertAtfer},()=>{\n                            setTimeout(this.countTimer,1000)\n                        });\n                    }\n                    this.setState({getCerting:false});\n                }).catch(e=>{\n                    this.setState({getCerting:false});\n                });\n            }\n        })\n    }\n    validatePhoneNo = (phoneNo)=>{\n        if(!phoneNo){\n            ToastInfo('请输入手机号');\n        } else if(!/(^1[3|4|5|7|8]\\d{9}$)|(^09\\d{8}$)/.test(phoneNo)){\n            ToastInfo('请输入正确格式的手机号码');\n        }else{\n            return true;\n        }\n    }\n    validateCertNo = (CertNo)=>{\n        if(!CertNo){\n            ToastInfo('请输入验证码');\n        }else{\n            return true;\n        }\n    }\n    handleSubmit = (e)=>{\n        e && e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if(this.validatePhoneNo(values.phoneNo) && this.validateCertNo(values.certNo)){\n                this.setState({logining:true});\n                login(values.phoneNo,values.certNo).then((res)=>{\n                    this.setState({logining:false});\n                }).catch(e=>{\n                    this.setState({logining:false});\n                })\n            }\n            \n        });\n    }\n    render(){\n        const { getFieldDecorator } = this.props.form,\n            {getCerting,certNoTime,logining} = this.state;\n        return <React.Fragment>\n            <Modal\n            title=\"欢迎入驻\"\n            visible={this.state.visible}\n            centered={true}\n            footer={null}\n            closable={false}\n            className='component-login-modal'\n            style={{width: '33.2vw'}}\n            maskClosable={true}\n            onCancel={this.handleCancel}\n            >\n            <Form onSubmit={this.handleSubmit} className=\"component-login-form\">\n                <Form.Item>\n                {getFieldDecorator('phoneNo')(\n                    <Input\n                        placeholder=\"请输入手机号\"\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />,\n                )}\n                </Form.Item>\n                <Form.Item>\n                {getFieldDecorator('certNo')(\n                    <Input\n                    placeholder=\"请输入验证码\"\n                    prefix={<Icon type=\"safety-certificate\" style={{ color: 'rgba(0,0,0,.25)'}}/>}\n                    addonAfter={\n                        getCerting?<span className='info'>获取中...</span>:\n                        (certNoTime === 0?\n                        <span className='btn-addon info' onClick={this.getCert}>获取验证码</span>:\n                        <span className='info'>{`${certNoTime}秒后获取`}</span>\n                        )\n                    }\n                    />,\n                )}\n                </Form.Item>\n                \n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block={true} loading={logining}>\n                    登录\n                </Button>\n            </Form>\n            </Modal>\n        </React.Fragment>\n    }\n}\n\nexport default Form.create({ name: 'component-login-form' })(LoginModal);","import 'react-app-polyfill/stable';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoginModal from 'component/LoginModal';\nimport Bowser from \"bowser\";\nimport './common.less';\n\nReactDOM.render(<LoginModal/>,document.getElementById('join-us'));\n\n\n\n// 浏览器检测\ntry{\n    let browser = Bowser.getParser(window.navigator.userAgent).getBrowser();\n    if(/Internet Explorer/i.test(browser.name)){\n        if(Number.parseInt(browser.version)<=9){\n            document.body.innerHTML = '不支持该IE版本，请使用IE10或者以上版本的IE浏览器';\n        }\n    }\n    console.log('当前浏览器：',browser.name,'；版本：',browser.version);\n}catch(e){\n}","import React from 'react';\nimport { BackTop } from 'antd';\n// import './index.css';\n\nexport default class RightBar extends React.Component{\n    state = {\n        QRVisible:false,\n    }\n    toggleQRVisible = (e)=>{\n        e && e.stopPropagation();\n        this.setState({\n            QRVisible:!this.state.QRVisible,\n        })\n    }\n    render(){\n        const {QRVisible} = this.state;\n        return <React.Fragment>\n                <div className=\"fixed fixed-qr\">\n                    <div className=\"qr-code-list\" style={QRVisible?{display:'block'}:{}}>\n                    <div className=\"qr-code\">\n                        <img src={`${process.env.REACT_APP_IMAGE_PUBLIC_URL}/right_bar_qr1.png`} alt=''/>\n                        <div className=\"title\">商家版APP</div>\n                    </div>\n                    <div className=\"qr-code\">\n                        <img src={`${process.env.REACT_APP_IMAGE_PUBLIC_URL}/right_bar_qr2.png`} alt=''/>\n                        <div className=\"title\">消费版APP</div>\n                    </div>\n                \n                    <div className=\"qr-code\">\n                        <img src={`${process.env.REACT_APP_IMAGE_PUBLIC_URL}/right_bar_qr3.png`} alt=''/>\n                        <div className=\"title\">加入QQ群了解更多</div>\n                    </div>\n                    </div>\n                    {\n                        QRVisible && <div className='line'></div>\n                    }\n                    <div className=\"more-qr\" onClick={this.toggleQRVisible}></div>\n                    <BackTop className='right-bar'>\n                        <div className='line'></div>\n                        <div className=\"goto-top\" id='back-top'></div>\n                    </BackTop>\n                </div>\n            </React.Fragment>\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import '../../common';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport RightBar from 'component/RightBar';\nimport 'component/RightBar/index.css';\nimport Swiper from 'swiper';\n\nimport * as serviceWorker from '../../serviceWorker';\n\nReactDOM.render(<RightBar/>, document.getElementById('right-bar-container'));\n\n// 页面上图片轮播\n/*var swiper = */ new Swiper('.first-page-container .swiper-container',{\n    loop: true,\n    autoplay: {\n        delay: 3000,\n        disableOnInteraction: false,\n    },\n});\n\n/*var collaborator_swiper = */new Swiper('.collaborator .swiper-container',{\n    loop: true,\n    autoplay: {\n        delay: 3000,\n        disableOnInteraction: false,\n    },\n    navigation: {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev',\n    },\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}